



Network Working Group                                        A. Harrison
Internet-Draft                                                     Cisco
Intended status: Informational                            3 January 2025
Expires: 7 July 2025


                   Module-Lattice Key Exchange in SSH
                    draft-harrison-mlkem-ssh-latest

Abstract

   This document defines Post-Quantum key exchange methods based on
   Module-lattice post-quantum key encapsulation schemes.  These methods
   are defined for use in the SSH Transport Layer Protocol.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://alharrison.github.io/ssh_mlkem_draft/draft-harrison-mlkem-
   ssh.html.  Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-harrison-mlkem-ssh/.

   Source for this draft and an issue tracker can be found at
   https://github.com/alharrison/ssh_mlkem_draft.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 7 July 2025.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Key Exchange Method: ML-KEM
   4.  Security Considerations
   5.  IANA Considerations
   6.  References
     6.1.  Normative References
     6.2.  Informative References
   Acknowledgments
   Author's Address

1.  Introduction

   The security of traditional key exchange methods used in Secure Shell
   (SSH) [RFC4251] relies on the algorithms being too computationally
   complex to be broken.  The development of quantum computers poses a
   threat to the complexity of these algorithms.  Given sufficiently
   powerful quantum computers, these traditional algorithms would be
   vulnerable to attack.

   Additionally, the threat of "harvest-now-decrypt-later" attacks could
   creates a risk in the current landscape before sufficiently powerful
   quantum computers are available.  In this attack, the data would be
   collected and decrypted by these quantum computers at a later date.

   This document addresses the problem by proposing the use of post-
   quantum key encapsulation mechanisms (KEMs) for us in SSH as key
   exchange algorithms.  The post-quantum KEM discussed in this document
   is ML-KEM which is based on CRYSTALS-KYBER.  [FIPS203] standardized
   the ML-KEM scheme in 2024 with three parameter variants, ML-KEM-512,
   ML-KEM-768, ML-KEM-1024.  ML-KEM is a NIST approved mechanism that is
   believed to be secure against an attacker with a quantum computer.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   {::boilerplate bcp78-tagged}

   {::boilerplate bcp79-tagged}

3.  Key Exchange Method: ML-KEM

   When using ML-KEM as a Key Exchange Method, the key would be
   exchanged as described in [FIPS203].  The client, the initiating
   party would start with the generation of the encapsulation and
   decapsulation key.  The encapsulation (public) key is then shared
   with the server.  The server uses the (public) key to encapsulate the
   shared secret key into the ciphertext and transmits this back to the
   client.  The client then uses the previously generated (private) key
   to decapsulate the shared secret from the server's ciphertext.

4.  Security Considerations

   The security of ML-KEM is based on the presumed difficulty of solving
   the MLWE problem, based on the computational problems in module
   lattices.  [FIPS203]

5.  IANA Considerations

   IANA is requested to register new method names "ml-kem-512-sha256",
   "ml-kem-768-sha256", "ml-kem-1024-sha384", and to be registered by
   IANA in the "Key Exchange Method Names" registry for SSH [IANA-SSH]
   with a reference field to this RFC and the "OK to implment" field of
   "May".

6.  References

6.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC4251]  Ylonen, T. and C. Lonvick, Ed., "The Secure Shell (SSH)
              Protocol Architecture", RFC 4251, DOI 10.17487/RFC4251,
              January 2006, <https://www.rfc-editor.org/rfc/rfc4251>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

6.2.  Informative References

   [FIPS203]  National Institute of Standards and Technology (NIST),
              "Module-Lattice-based Key-Encapsulation Mechanism
              Standard", FIPS PUB 203, August 2024,
              <https://doi.org/10.6028/NIST.FIPS.203>.

   [IANA-SSH] IANA, "Secure Shell (SSH) Protocol Parameters", 2021,
              <https://www.iana.org/assignments/ssh-parameters/ssh-
              parameters.xhtml>.

Acknowledgments

   Open Quantum Safe has an existing implementation of ML-KEM based key
   encapsulation methods in all three parameter variants.  Their fork of
   OpenSSH contains an implementation using these algorithms for SSH key
   exchange algorithms.

Author's Address

   Alexander Harrison
   Cisco
   Email: aleharri@cisco.com
